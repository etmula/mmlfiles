<?xml version="1.0"?>
<div><div><a NAME="S8"><span class="kw">scheme  </span><span class="comment"><font color="firebrick">:: CIRCCMB2:sch 8</font></span><br/></a><span class="lab"><font color="Green" title="E8">CIRCCMB29sch8</font></span>{ <font color="Maroon">F<sub>1</sub></font>() <span class="kw">-&gt; </span>  non  <a href="struct_0.html#V2" title="STRUCT_0:attr.2">empty</a>   <a href="msualg_1.html#L1" title="MSUALG_1:struct.1">ManySortedSign</a> , <font color="Maroon">F<sub>2</sub></font>(   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> ,   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> ) <span class="kw">-&gt; </span>  non  <a href="struct_0.html#V2" title="STRUCT_0:attr.2">empty</a>   non  <a href="struct_0.html#V11" title="STRUCT_0:attr.11">void</a>   <a href="circcomb.html#V1" title="CIRCCOMB:attr.1">unsplit</a>   <a href="circcomb.html#V2" title="CIRCCOMB:attr.2">gate`1=arity</a>   <a href="circcomb.html#V3" title="CIRCCOMB:attr.3">gate`2isBoolean</a>   <a href="msualg_1.html#L1" title="MSUALG_1:struct.1">ManySortedSign</a> , <font color="Maroon">F<sub>3</sub></font>() <span class="kw">-&gt; </span>   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> , <font color="Maroon">F<sub>4</sub></font>(   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> ,   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> ) <span class="kw">-&gt; </span>   <a href="hidden.html#M1" title="HIDDEN:mode.1">object</a> , <font color="Maroon">F<sub>5</sub></font>() <span class="kw">-&gt; </span>  <a href="nat_1.html#NM1" title="NAT_1:NM.1">Nat</a> } :<br/><div class="add"><a NAME="E2:13"/>
 ex <font color="Olive" title="b1">S</font> being   non  <a href="struct_0.html#V2" title="STRUCT_0:attr.2">empty</a>   non  <a href="struct_0.html#V11" title="STRUCT_0:attr.11">void</a>   <a href="msualg_1.html#V1" title="MSUALG_1:attr.1">strict</a>   <a href="circcomb.html#V1" title="CIRCCOMB:attr.1">unsplit</a>   <a href="circcomb.html#V2" title="CIRCCOMB:attr.2">gate`1=arity</a>   <a href="circcomb.html#V3" title="CIRCCOMB:attr.3">gate`2isBoolean</a>   <a href="msualg_1.html#L1" title="MSUALG_1:struct.1">ManySortedSign</a>  ex <font color="Olive" title="b2">f</font>, <font color="Olive" title="b3">h</font> being   <a href="pboole.html#NM1" title="PBOOLE:NM.1">ManySortedSet</a> of  <a href="numbers.html#NK1" title="NUMBERS:NK.1">NAT</a>  st <br/>( <font color="Olive" title="b1">S</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b2">f</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <font color="Maroon">F<sub>5</sub></font>() &amp; <font color="Olive" title="b2">f</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <a href="numbers.html#K5" title="NUMBERS:func.5">0</a> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>1</sub></font>() &amp; <font color="Olive" title="b3">h</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <a href="numbers.html#K5" title="NUMBERS:func.5">0</a> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>3</sub></font>() &amp; (  for <font color="Olive" title="b4">n</font> being   <a href="nat_1.html#NM1" title="NAT_1:NM.1">Nat</a><br/>  for <font color="Olive" title="b5">S</font> being   non  <a href="struct_0.html#V2" title="STRUCT_0:attr.2">empty</a>   <a href="msualg_1.html#L1" title="MSUALG_1:struct.1">ManySortedSign</a> <br/>  for <font color="Olive" title="b6">x</font> being    <a href="hidden.html#M2" title="HIDDEN:mode.2">set</a>   st <font color="Olive" title="b5">S</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b2">f</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <font color="Olive" title="b4">n</font> &amp; <font color="Olive" title="b6">x</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b3">h</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <font color="Olive" title="b4">n</font> holds <br/>( <font color="Olive" title="b2">f</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <span class="p1">(<span class="default"><font color="Olive" title="b4">n</font> <a href="nat_1.html#K1" title="NAT_1:func.1">+</a> 1</span>)</span> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b5">S</font> <a href="circcomb.html#K2" title="CIRCCOMB:func.2">+*</a> <font color="Maroon">F<sub>2</sub></font>(<font color="Olive" title="b6">x</font>,<font color="Olive" title="b4">n</font>) &amp; <font color="Olive" title="b3">h</font> <a href="funct_1.html#K1" title="FUNCT_1:func.1">.</a> <span class="p1">(<span class="default"><font color="Olive" title="b4">n</font> <a href="nat_1.html#K1" title="NAT_1:func.1">+</a> 1</span>)</span> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>4</sub></font>(<font color="Olive" title="b6">x</font>,<font color="Olive" title="b4">n</font>) ) ) )
 </div><span class="kw">provided</span><div class="add"><a NAME="E1:13"/><span class="lab"><font color="Green" title="E4">A1</font></span>: 
( <font color="Maroon">F<sub>1</sub></font>() is  <a href="circcomb.html#V1" title="CIRCCOMB:attr.1">unsplit</a>  &amp; <font color="Maroon">F<sub>1</sub></font>() is  <a href="circcomb.html#V2" title="CIRCCOMB:attr.2">gate`1=arity</a>  &amp; <font color="Maroon">F<sub>1</sub></font>() is  <a href="circcomb.html#V3" title="CIRCCOMB:attr.3">gate`2isBoolean</a>  &amp;  not <font color="Maroon">F<sub>1</sub></font>() is  <a href="struct_0.html#V11" title="STRUCT_0:attr.11">void</a>  &amp;  not <font color="Maroon">F<sub>1</sub></font>() is  <a href="struct_0.html#V2" title="STRUCT_0:attr.2">empty</a>  &amp; <font color="Maroon">F<sub>1</sub></font>() is  <a href="msualg_1.html#V1" title="MSUALG_1:attr.1">strict</a>  )
 </div></div></div>
