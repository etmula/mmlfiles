<?xml version="1.0"?>
<div><div><a NAME="S5"><span class="kw">scheme  </span><span class="comment"><font color="firebrick">:: STACKS_1:sch 5</font></span><br/></a><span class="lab"><font color="Green" title="E5">UNIQsch</font></span>{ <font color="Maroon">F<sub>1</sub></font>() <span class="kw">-&gt; </span>  <a href="stacks_1.html#NM3" title="STACKS_1:NM.3">StackAlgebra</a>, <font color="Maroon">F<sub>2</sub></font>() <span class="kw">-&gt; </span>  <a href="stacks_1.html#NM2" title="STACKS_1:NM.2">stack</a> of <font color="Maroon">F<sub>1</sub></font>(), <font color="Maroon">F<sub>3</sub></font>() <span class="kw">-&gt; </span>  non  <a href="xboole_0.html#V1" title="XBOOLE_0:attr.1">empty</a>   <a href="hidden.html#M2" title="HIDDEN:mode.2">set</a> , <font color="Maroon">F<sub>4</sub></font>() <span class="kw">-&gt; </span>   <a href="subset_1.html#M1" title="SUBSET_1:mode.1">Element</a> of <font color="Maroon">F<sub>3</sub></font>(), <font color="Maroon">F<sub>5</sub></font>(   <a href="hidden.html#M2" title="HIDDEN:mode.2">set</a> ,   <a href="hidden.html#M2" title="HIDDEN:mode.2">set</a> ) <span class="kw">-&gt; </span>   <a href="subset_1.html#M1" title="SUBSET_1:mode.1">Element</a> of <font color="Maroon">F<sub>3</sub></font>() } :<br/><div class="add"><a NAME="E1:30"/>
 for <font color="Olive" title="b1">a1</font>, <font color="Olive" title="b2">a2</font> being    <a href="subset_1.html#M1" title="SUBSET_1:mode.1">Element</a> of <font color="Maroon">F<sub>3</sub></font>()  st  ex <font color="Olive" title="b3">F</font> being   <a href="funct_2.html#NM1" title="FUNCT_2:NM.1">Function</a> of  the <a href="struct_0.html#U4" title="STRUCT_0:sel.4">carrier'</a> of <font color="Maroon">F<sub>1</sub></font>(),<font color="Maroon">F<sub>3</sub></font>() st <br/>( <font color="Olive" title="b1">a1</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Maroon">F<sub>2</sub></font>() &amp; (  for <font color="Olive" title="b4">s1</font> being   <a href="stacks_1.html#NM2" title="STACKS_1:NM.2">stack</a> of <font color="Maroon">F<sub>1</sub></font>()  st  <a href="stacks_1.html#R1" title="STACKS_1:pred.1">emp</a> <font color="Olive" title="b4">s1</font> holds <br/><font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Olive" title="b4">s1</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>4</sub></font>() ) &amp; (  for <font color="Olive" title="b4">s1</font> being   <a href="stacks_1.html#NM2" title="STACKS_1:NM.2">stack</a> of <font color="Maroon">F<sub>1</sub></font>()<br/>  for <font color="Olive" title="b5">e</font> being   <a href="struct_0.html#NM1" title="STRUCT_0:NM.1">Element</a> of <font color="Maroon">F<sub>1</sub></font>() holds  <font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <span class="p1">(<span class="default"><a href="stacks_1.html#K7" title="STACKS_1:func.7">push</a> (<font color="Olive" title="b5">e</font>,<font color="Olive" title="b4">s1</font>)</span>)</span> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>5</sub></font>(<font color="Olive" title="b5">e</font>,<span class="p1">(<span class="default"><font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Olive" title="b4">s1</font></span>)</span>) ) ) &amp;  ex <font color="Olive" title="b3">F</font> being   <a href="funct_2.html#NM1" title="FUNCT_2:NM.1">Function</a> of  the <a href="struct_0.html#U4" title="STRUCT_0:sel.4">carrier'</a> of <font color="Maroon">F<sub>1</sub></font>(),<font color="Maroon">F<sub>3</sub></font>() st <br/>( <font color="Olive" title="b2">a2</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Maroon">F<sub>2</sub></font>() &amp; (  for <font color="Olive" title="b4">s1</font> being   <a href="stacks_1.html#NM2" title="STACKS_1:NM.2">stack</a> of <font color="Maroon">F<sub>1</sub></font>()  st  <a href="stacks_1.html#R1" title="STACKS_1:pred.1">emp</a> <font color="Olive" title="b4">s1</font> holds <br/><font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Olive" title="b4">s1</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>4</sub></font>() ) &amp; (  for <font color="Olive" title="b4">s1</font> being   <a href="stacks_1.html#NM2" title="STACKS_1:NM.2">stack</a> of <font color="Maroon">F<sub>1</sub></font>()<br/>  for <font color="Olive" title="b5">e</font> being   <a href="struct_0.html#NM1" title="STRUCT_0:NM.1">Element</a> of <font color="Maroon">F<sub>1</sub></font>() holds  <font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <span class="p1">(<span class="default"><a href="stacks_1.html#K7" title="STACKS_1:func.7">push</a> (<font color="Olive" title="b5">e</font>,<font color="Olive" title="b4">s1</font>)</span>)</span> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Maroon">F<sub>5</sub></font>(<font color="Olive" title="b5">e</font>,<span class="p1">(<span class="default"><font color="Olive" title="b3">F</font> <a href="funct_2.html#K3" title="FUNCT_2:func.3">.</a> <font color="Olive" title="b4">s1</font></span>)</span>) ) ) holds <br/><font color="Olive" title="b1">a1</font> <a href="hidden.html#R1" title="HIDDEN:pred.1">=</a> <font color="Olive" title="b2">a2</font>
 </div></div></div>
